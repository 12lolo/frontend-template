@use "sass:math";

@function rem($pixel) {
  @if math.is-unitless($pixel) {
    @return math.div($pixel, 16) + rem;
  } @else {
    @error 'Don\'t use units when using the rem() function; only numbers.';
  }
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

$padding-large: rem(128);
$padding-medium: rem(64);
$padding-small: rem(32);
$hamburger-width: rem(35);
$hamburger-bar-height: rem(5);
$transition-duration: .6s;
$timing: cubic-bezier(0.5, 0, 0.5, 1);
$background-color-dark: #170044;
$background-color-dark-hover: #260069;
$color-white: #FFF;
$color-gray: #313131;


.hamburger {
  position: relative;
  display: block;
  width: $hamburger-width;
  cursor: pointer;
  appearance: none;
  background: none;
  outline: none;
  border: none;
  margin-left: auto;

  .bar, &:after, &:before {
    content: '';
    display: block;
    width: 100%;
    height: $hamburger-bar-height;
    background-color: $color-white;
    margin: 6px;
    transition: $transition-duration;
  }

  &.is-active {
    &:before {
      transform: rotate(-45deg) translate(-8px, 6px);
    }

    &:after {
      transform: rotate(45deg) translate(-9px, -8px);
    }

    .bar {
      opacity: 0;
    }
  }
}
@media (max-width: rem(900)) {
  header {
    z-index: 100;

    .container {
      position: fixed;
      z-index: 100;
      background-color: $background-color-dark;
      color: $color-white;
      display: flex;
      align-items: center;
      width: 100%;
      max-width: 100%;
      margin: 0 auto;

      img {
        max-width: rem(50);
        height: rem(40);
        margin: rem(5) rem(5) rem(5);

      }

      h2 {
        top: 50%;
        color: inherit;
        text-transform: uppercase;
        font-size: rem(32);
        font-weight: 900;
      }

      ul > li:has(ul) > a::after {
        content: url('../resources/images/right.svg');
        filter: brightness(0) invert(1);
        padding-left: rem(10);
        z-index: 1000;
        color: greenyellow;
      }

      ul {
        position: fixed;
        top: 0;
        left: -100%;
        width: 100%;
        min-height: 100vh;
        min-height: 100svh;
        display: block;
        z-index: 40;
        background-color: $background-color-dark;
        margin-top: rem(50);
        padding-top: rem(20);
        transition: $transition-duration;
        transition-timing-function: $timing;

        &.is-active {
          left: 0;
        }

        a {
          text-decoration: none;
          color: $color-white;
        }

        li {
          display: flex;
          list-style-type: none;
          margin: 0;
          padding: 0;

          a {
            display: block;
            width: fit-content;
            max-width: rem(200);
            padding: rem(12) rem(16);
            color: $color-white;
            text-decoration: none;
          }

          ul {
            width: fit-content + rem(60);
            transition: $transition-duration;
            transition-timing-function: $timing;

            li:first-child {
              z-index: 900;
              font-size: rem(18);
              font-weight: bold;
              display: flex;
              align-items: center;

              a::before {
                content: url('../resources/images/left.svg');
                filter: brightness(0) invert(1);
                padding-right: rem(10);
                z-index: 1000;
              }
            }

            li {
              a {
                display: block;
                width: 100%;
                max-width: rem(200);
                padding: rem(12) rem(16);
                color: $color-white;
                text-decoration: none;
              }
            }
          }
        }
      }
    }
  }
}
@media (min-width: rem(900)) {
  header {
    z-index: 10;
    height: rem(70);

    .container {
      display: flex;
      z-index: 20;
      background-color: $background-color-dark;
      color: $color-white;
      max-width: 100%;
      align-items: center;
      padding: rem(10) rem(20);
      height: rem(70);

      //Logo
      img {
        max-width: rem(50);
        height: rem(40);
        margin: rem(5) rem(5) rem(5);
      }

      //Title
      h2 {
        color: inherit;
        text-transform: uppercase;
        font-size: rem(32);
        font-weight: 900;
        margin-left: rem(10);
      }

      ul {
        height: rem(70);
        top: 50%;
        list-style: none;
        padding: 0;
        margin-left: rem(10);
        display: flex;

        li {
          display: flex;
          align-items: flex-end;
          position: relative;

          a {
            color: $color-white;
            text-decoration: none;
            padding: rem(15) rem(20);
            display: block;

            &:hover {
              background-color: $background-color-dark-hover;
            }
          }

          // Dropdown styles
          ul {
            width: fit-content;
            display: none;
            position: absolute;
            top: 100%;
            left: 0;
            background-color: $background-color-dark-hover;
            z-index: 50;
            opacity: 0;
            margin: 0;
            animation-duration: $transition-duration;

            li:first-child {
              display: none;
            }

            // Show dropdown on hover
            li:hover > ul {
              display: block;
              opacity: 1;
              animation-duration: $transition-duration;
            }
          }

          // Keep background color active when hovering over the child elements
          &:hover {
            > a {
              background-color: $background-color-dark-hover;
            }

            // Show the child ul when hovering over the parent li
            > ul {
              display: block;
              opacity: 1;
            }

            // Ensure the parent li remains highlighted when hovering over its child ul
            > ul:hover {
              display: block;
              opacity: 1;

              // Apply background color to the parent li
              ~ a {
                background-color: $background-color-dark-hover;
              }
            }
          }

          // Arrow indicator for dropdowns
          // Arrow indicator for dropdowns
          &:has(ul) > a {
            position: relative; // Set position to relative to position the arrow absolutely

            &::after {
              content: url('../resources/images/down.svg'); // Use the SVG image as content
              filter: brightness(0) invert(1); // Adjust the color of the SVG if needed
              display: block; // Make it a block element
              width: 20px; // Set a specific width for the SVG (adjust as needed)
              height: auto; // Maintain aspect ratio
              margin: 0 auto; // Center the SVG
              position: absolute; // Position it absolutely
              left: 50%; // Center it horizontally
              top: 70%; // Position it below the text
              transform: translateX(-50%); // Adjust for centering
            }
          }
        }
      }
    }
    .hamburger {
      display: none;
    }
  }
}
// _utilities.scss

@function rem($pixel) {
  @if math.is-unitless($pixel) {
    @return math.div($pixel, 16) + rem;
  } @else {
    @error 'Don\'t use units when using the rem() function; only numbers.';
  }
}

@mixin hamburger {
  width: rem(45);
  position: relative;
  display: block;
  cursor: pointer;
  appearance: none;
  background: none;
  outline: none;
  border: none;
  margin-right: 5%;
  margin-left: auto;

  .bar, &:after, &:before {
    content: '';
    display: block;
    width: 100%;
    height: rem(5);
    background-color: white;
    margin: 6px;
    transition: 0.5s;
  }

  &.is-active {
    &:before {
      transform: rotate(-45deg) translate(-8px, 6px);
    }

    &:after {
      transform: rotate(45deg) translate(-9px, -8px);
    }

    .bar {
      opacity: 0;
    }
  }
}

// First, create a mixin for the nav width
@mixin adaptive-nav-width($max-percentage: 60%) {
  width: min(100%, 450px);
  right: calc(-1 * min(100%, 450px));
}

@mixin responsive-content-margins(
  $mobile-margin: 10,
  $desktop-margin: 100,
  $viewport-min: 320,
  $viewport-max: 1920
) {
  margin-left: clamp(
          #{$mobile-margin}px,
          calc(#{$mobile-margin}px + (#{$desktop-margin} - #{$mobile-margin}) * ((100vw - #{$viewport-min}px) / (#{$viewport-max} - #{$viewport-min}))),
          #{$desktop-margin}px
  );
  margin-right: clamp(
          #{$mobile-margin}px,
          calc(#{$mobile-margin}px + (#{$desktop-margin} - #{$mobile-margin}) * ((100vw - #{$viewport-min}px) / (#{$viewport-max} - #{$viewport-min}))),
          #{$desktop-margin}px
  );
}

@mixin responsive-margins(
  $mobile-margin: 10,    // Increased from 10
  $desktop-margin: 150,  // Increased from 200
  $viewport-min: 320,
  $viewport-max: 1920
) {
  margin-left: clamp(
          #{$mobile-margin}px,
          calc(#{$mobile-margin}px + (#{$desktop-margin} - #{$mobile-margin}) * ((100vw - #{$viewport-min}px) / (#{$viewport-max} - #{$viewport-min}))),
          #{$desktop-margin}px
  );
  margin-right: clamp(
          #{$mobile-margin}px,
          calc(#{$mobile-margin}px + (#{$desktop-margin} - #{$mobile-margin}) * ((100vw - #{$viewport-min}px) / (#{$viewport-max} - #{$viewport-min}))),
          #{$desktop-margin}px
  );
}

@mixin flex-center {
  display: flex;
  align-items: center;

}

@mixin background-blur {
  background-color: $nav-background-color-dark;
  backdrop-filter: $nav-blur;
}

@mixin hover-effect {
  &:hover {
    background-color: $nav-background-color-dark-hover;
    backdrop-filter: $nav-blur;
  }
}

// Footer Mixins
@mixin flex-container {
  display: flex;
  flex-wrap: wrap;
}

@mixin underline-pseudo-element {
  content: '';
  position: absolute;
  left: 0;
  bottom: rem(-10);
  background-color: $footer-accent-color;
  height: rem(2);
  width: rem(50);
  box-sizing: border-box;
}

@mixin social-icon {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  height: rem(40);
  width: rem(40);
  background-color: rgba(255, 255, 255, 0.2);
  margin: rem(10) rem(20) rem(10) 0;
  border-radius: 50%;
  overflow: hidden;
  transition: all $footer-transition-duration ease;
}